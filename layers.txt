
workers -> processo em segundo plano
  -> toda logica PESADA (que envolva CPU)
  -> tudo que pode travar a tela (for loop, machine learning, AI, processamento de Web CAM)
  -> ele chama as regras de negocio da service

services -> 
  -> toda logica de negocio
  -> toda chamada externa (API, arquivos, bancos de dados)

views ->
  -> toda iteração com o DOM (com o HTML, com a pagina)

controllers
  -> é a intermediaria entre (services e/ou workers) e views

factories ->
  -> a factory é quem importa as dependencias
  -> e cria o objeto final para fazermos as chamadas 
  -> retorna a função que inicializa o fluxo daquele componente (init)

index.js -> é responsável por chamar todas as camadas 
